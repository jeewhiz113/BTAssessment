@page "/counter/{attractionId}"
@inject NavigationManager Navigation
@inject AttractionsService attractionService

@if (ImageUrl != null)
{
    <img src="@ImageUrl" alt="Attraction Image" style="width: 100%; height: auto;">
}

<div class="pt-3">
    @if (ticketMasterEventsDto is null)
    {
        <p>Loading</p>
    }
    else if (ticketMasterEventsDto._Embedded is null)
    {
        <div>
            <h5 style="display: inline-block;">@AttractionName</h5>
            <span style="display: inline-block; float: right;">
                <a href="#"><img src="/website.svg"></a>
            </span>
            <span style="display: inline-block; float: right;">
                <a href="#"><img src="/spotify.svg"></a>
            </span>
            <span style="display: inline-block; float: right;">
                <a href="#"><img src="/youtube.svg"></a>
            </span>
            <span style="display: inline-block; float: right;">
                <a href="#"><img src="/x.svg"></a>
            </span>
        </div>

        <div class="d-flex justify-content-center">
            <img src="/noresultsfound.svg" />
        </div>
    }
    else
    {
        <div>
            <h5 style="display: inline-block;">@AttractionName</h5>
            <span style="display: inline-block; float: right;">
                <a href="#"><img src="/website.svg"></a>
            </span>
            <span style="display: inline-block; float: right;">
                <a href="#"><img src="/spotify.svg"></a>
            </span>
            <span style="display: inline-block; float: right;">
                <a href="#"><img src="/youtube.svg"></a>
            </span>
            <span style="display: inline-block; float: right;">
                <a href="#"><img src="/x.svg"></a>
            </span>
        </div>

        <div>
            @foreach (var e in ticketMasterEventsDto._Embedded.Events)
            {
                <div class="card">
                    <div class="container">
                        <div class="row">
                            <div class="col-4">
                                @if (@e._embedded.Venues[0].Images != null)
                                {
                                    <img src="@e._embedded.Venues[0].Images[0].Url" style="height: 100%; width:100%;" alt="Card image cap">
                                }else
                                {
                                    <p>No Image</p>
                                }
                                
                            </div>
                            <div class="col-8">
                                <div>@ConvertToFormattedDate(e.Dates.Start.LocalDate)</div>
                                <div>@e.Name</div>
                                <div>@e._embedded.Venues[0].Name, @e._embedded.Venues[0].City.Name @e._embedded.Venues[0].State.StateCode</div>
                            </div>
                        </div>
                    </div>
                    
                </div>
            }
        </div>
    }
</div>

@code {
    [Parameter]
    public string AttractionId { get; set; }

    public string ImageUrl { get; set; }

    public string AttractionName { get; set; }

    protected override void OnParametersSet()
    {
        var uri = Navigation.ToAbsoluteUri(Navigation.Uri);
        var query = System.Web.HttpUtility.ParseQueryString(uri.Query);

        ImageUrl = query["imageUrl"];
        AttractionName = query["name"];
    }

    private TicketMasterEventsDto? ticketMasterEventsDto;

    protected override async Task OnInitializedAsync()
    {
        var eventsResponse = await attractionService.GetEventsAsync(AttractionId);
        ticketMasterEventsDto = eventsResponse;
    }

    private string ConvertToFormattedDate(string date)
    {
        if (DateTime.TryParse(date, out DateTime parsedDate))
        {
            return parsedDate.ToString("dddd, MMMM dd, yyyy");
        }
        return "Invalid date format";
    }
}